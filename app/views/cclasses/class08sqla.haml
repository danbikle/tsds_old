%h2 Class08 Lab Answer:
%h2 For 2016, report on aggregated Accuracy using SQL against allpredictions.csv

%p I did this lab by preparing a friendly CSV file and then using Sqlite3 to report from that file.

%p I used a simple bash script to manage the two tasks.

.syntax
  %pre
    =render 'class08sqla1'

%p The above bash script calls a Python script:

.syntax
  %pre
    =render 'class08sqla2'

%p The above Python script helps me in two ways:
%ul
  %li Filters out columns I dont want.
  %li Copies price from leading row to current row.

%p Sqlite3 cannot (easily) copy a value from leading row to current row so I rely on Python.

%p SQL inside of Postgres can copy a value from leading row to current row which is something to keep in mind if Postgres is available.

%p One issue with Postgres is that when I use it to interact with CSV files, the files need to be readable and writeable by the postgres linux user.

%p When I work with Sqlite3, Linux permissions are less of an issue.

%p After my bash script calls the above Python script, my bash script then calls Sqlite3 which runs this SQL syntax:

.syntax
  %pre
    =render 'class08sqla3'

%p The above SQL has some syntax lessons:
%ul
  %li With Sqlite3, how to import a CSV file into a table?
  %li With SQL, how to place subquery into a predicate?
  %li With SQL, when I join tables, how to replace table with subquery?
  %li With SQL, how to join tables with no join column?
  %li With SQL, when can I safely do a cartesian join?

%p After I ran the above scripts I captured the output:
.syntax
  %pre
    =render 'class08sqla4'

%p The above output shows that, for 2016, the accuracy of the Logistic Regression model is 48.9% which is not very good.

%p
  %a(href='class08#lab')
    Class08 Lab
